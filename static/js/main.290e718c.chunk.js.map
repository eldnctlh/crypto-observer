{"version":3,"sources":["utils/hooks/getBalances.js","constants/chains.js","components/wallet/connectors.js","utils/helpers/formatting.js","components/Balances/index.js","pages/Home/index.js","App.js","index.js"],"names":["interval","rpc","tokens","id","slug","title","decimals","injected","InjectedConnector","supportedChainIds","Object","keys","chains","map","e","useGetBalances","useWeb3React","account","active","chainId","deactivate","activate","React","useState","balances","setBalances","lastUpdate","setLastUpdate","updatedAt","setUpdatedAt","useEffect","window","ethereum","on","reactivate","clearInterval","setInterval","fromNow","a","updateBalances","chain","rpcURL","web3","Web3","promises","forEach","token","tokenAddress","walletAddress","contract","eth","Contract","getBalance","methods","balanceOf","call","push","getPrices","process","params","url","reduce","acc","val","i","fetch","res","json","Promise","all","prices","balance","index","coinmarketcapID","data","find","price","quote","USD","moment","getTotalInUSD","amount","toFixed","Balances","renderIcon","changePercentage","CaretUpOutlined","color","style","marginRight","CaretDownOutlined","Title","level","className","marginTop","gutter","span","strong","value","matchedBalance","formattedAmount","Math","pow","Text","percent_change_1h","percent_change_24h","percent_change_7d","percent_change_30d","percent_change_60d","percent_change_90d","Home","connect","console","log","onClick","marginLeft","getLibrary","provider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ycAOIA,E,+HCPW,GACX,IAAK,CACDC,IAAK,yBACLC,OAAQ,CACJ,CACIC,GAAI,6CACJC,KAAM,WACNC,MAAO,OACPC,SAAU,GAEd,CACIH,GAAI,6CACJC,KAAM,QACNC,MAAO,QACPC,SAAU,KAGlBD,MAAO,UAEX,MAAO,CACHJ,IAAK,wCACLC,OAAQ,CACJ,CACIC,GAAI,6CACJE,MAAO,OACPD,KAAM,WACNE,SAAU,GAEd,CACIH,GAAI,6CACJC,KAAM,cACNC,MAAO,QACPC,SAAU,GAEd,CACIH,GAAI,6CACJC,KAAM,cACNC,MAAO,OACPC,SAAU,IAGlBD,MAAO,aAEX,GAAI,CACAJ,IAAK,oCACLC,OAAQ,CACJ,CACIC,GAAI,6CACJE,MAAO,OACPD,KAAM,WACNE,SAAU,IAEd,CACIH,GAAI,6CACJC,KAAM,WACNC,MAAO,MACPC,SAAU,IAEd,CACIH,GAAI,6CACJC,KAAM,iBACNC,MAAO,QACPC,SAAU,KAGlBD,MAAO,wBC9DFE,EAAW,IAAIC,IAAkB,CAC1CC,kBAAmBC,OAAOC,KAAKC,GAAQC,KAAI,SAAAC,GAAC,OAAKA,O,2GFgHtCC,EA3GQ,WACnB,MAA2DC,cAAnDC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,WAAYC,EAA9C,EAA8CA,SAC9C,EAAgCC,IAAMC,SAAS,IAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,IAAMC,SAAS,MAAnD,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCL,IAAMC,SAAS,MAAjD,mBAAOK,EAAP,KAAkBC,EAAlB,KAEAP,IAAMQ,WAAU,WAUZ,OATGC,OAAOC,WACND,OAAOC,SAASC,GAAG,gBAAgB,WAC/BC,OAEJH,OAAOC,SAASC,GAAG,mBAAmB,WAClCC,QAID,kBAAMC,cAAcnC,MAC5B,IAEHsB,IAAMQ,WAAU,WACZK,cAAcnC,GACdA,EAAWoC,aAAY,WACfV,GACAG,EAAaH,EAAWW,aAE7B,OAEJ,CAACX,IAEJ,IAAMQ,EAAU,uCAAG,sBAAAI,EAAA,sEACTlB,IADS,uBAETC,EAASd,GAFA,OAGfgC,IAHe,2CAAH,qDAMhBjB,IAAMQ,WAAU,WACZS,MACD,CAACrB,IAEJ,IAAMqB,EAAc,uCAAG,wCAAAD,EAAA,0DACfpB,EADe,wBAETsB,EAAQ5B,EAAOO,GACfsB,EAASD,EAAMvC,IACfyC,EAAO,IAAIC,IAAKF,GAChBG,EAAW,GACjBJ,EAAMtC,OAAO2C,SAAQ,SAACC,GAClB,IAAIC,EAAeD,EAAM3C,GACrB6C,EAAgB/B,EAkBhBgC,EAAW,IAAIP,EAAKQ,IAAIC,SAhBf,CACT,CACI,UAAY,EACZ,OAAU,CAAC,CAAC,KAAQ,SAAU,KAAQ,YACtC,KAAQ,YACR,QAAW,CAAC,CAAC,KAAQ,UAAW,KAAQ,YACxC,KAAQ,YAEZ,CACI,UAAY,EACZ,OAAU,GACV,KAAQ,WACR,QAAW,CAAC,CAAC,KAAQ,GAAI,KAAQ,UACjC,KAAQ,aAG6BJ,GAEvCK,EAAU,uCAAG,sBAAAd,EAAA,sEACFW,EAASI,QAAQC,UAAUN,GAAeO,OADxC,mFAAH,qDAGhBX,EAASY,KAAKJ,QAGZK,EAlCS,+BAAAnB,EAAA,MAkCG,gCAAAA,EAAA,4DACCoB,uCACTC,EAAS,CACX,OAAY,MACZ,QAAY,CAAC,oBAHFD,wCAIX,oBAAsB,GAGpBE,EARQ,iFAQwEpB,EAAMtC,OAAO2D,QAAO,SAACC,EAAKC,EAAKC,GAAX,OAAiBF,GAAOE,EAAI,IAAM,IAAMD,EAAI3D,OAAM,KAR9I,SASI6D,MAAML,EAAKD,GATf,cASRO,EATQ,gBAUDA,EAAIC,OAVH,mFAlCH,8DA+CGC,QAAQC,IAAIzB,GA/Cf,cA+CTsB,EA/CS,iBAgDMT,IAhDN,QAgDTa,EAhDS,OAkDf7C,EAAYyC,EAAIL,QAAO,SAACC,EAAKS,EAASC,GAClC,IAAMC,EAAkB/D,OAAOC,KAAK2D,EAAOI,MAAMC,MAAK,SAAA7D,GAAC,OAAIwD,EAAOI,KAAK5D,GAAGV,OAASoC,EAAMtC,OAAOsE,GAAOpE,QACjGwE,EAAQN,EAAOI,KAAKD,GAC1B,OAAO,2BACAX,GADP,kBAEKtB,EAAMtC,OAAOsE,GAAOrE,GAAK,CACtBoE,UACAK,MAAOA,EAAMC,MAAMC,SAG5B,KACHnD,EAAcoD,OA7DC,4CAAH,qDAiEpB,MAAO,CAAEvD,WAAUI,cG7GVoD,EAAgB,SAACC,EAAQL,GAClC,OAAQK,EAASL,GAAOM,QAAQ,I,OCuErBC,EArEE,WACb,MAA4BnE,cAApBE,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAChB,EAAgCJ,IAAxBS,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,UAElB,IAAKV,EACD,OAAO,KAGX,IAAMkE,EAAa,SAACC,GAChB,OAAIA,EAAmB,EACZ,cAACC,EAAA,EAAD,CAAiBC,MAAM,MAAMC,MAAO,CAAEC,YAAa,QAASF,MAAO,aAEnE,cAACG,EAAA,EAAD,CAAmBF,MAAO,CAAEC,YAAa,QAASF,MAAO,cA8BxE,OACI,qCAEQ3D,EACI,eAAC,IAAW+D,MAAZ,CAAkBH,MAAO,CAAED,MAAO,SAAWK,MAAO,EAApD,0BAAqEhE,KACrE,KAER,eAAC,IAAD,CAAMiE,UAAU,qBAAqBL,MAAO,CAAEM,UAAW,QAAzD,UACI,eAAC,IAAD,CAAKC,OAAQ,CAAC,GAAI,IAAlB,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SAAc,cAAC,IAAWL,MAAZ,CAAkBC,MAAO,EAAGK,QAAM,EAAlC,qBACd,cAAC,IAAD,CAAKD,KAAM,EAAX,SAAc,cAAC,IAAWL,MAAZ,CAAkBC,MAAO,EAAGK,QAAM,EAAlC,uBACd,cAAC,IAAD,CAAKD,KAAM,EAAX,SAAc,cAAC,IAAWL,MAAZ,CAAkBC,MAAO,EAAGK,QAAM,EAAlC,2BACd,cAAC,IAAD,CAAKD,KAAM,EAAX,SAAc,cAAC,IAAWL,MAAZ,CAAkBC,MAAO,EAAGK,QAAM,EAAlC,2BACd,cAAC,IAAD,CAAKD,KAAM,EAAX,SAAc,cAAC,IAAWL,MAAZ,CAAkBC,MAAO,EAAGK,QAAM,EAAlC,sBACd,cAAC,IAAD,CAAKD,KAAM,EAAX,SAAc,cAAC,IAAWL,MAAZ,CAAkBC,MAAO,EAAGK,QAAM,EAAlC,wBACd,cAAC,IAAD,CAAKD,KAAM,EAAX,SAAc,cAAC,IAAWL,MAAZ,CAAkBC,MAAO,EAAGK,QAAM,EAAlC,sBACd,cAAC,IAAD,CAAKD,KAAM,EAAX,SAAc,cAAC,IAAWL,MAAZ,CAAkBC,MAAO,EAAGK,QAAM,EAAlC,uBACd,cAAC,IAAD,CAAKD,KAAM,EAAX,SAAc,cAAC,IAAWL,MAAZ,CAAkBC,MAAO,EAAGK,QAAM,EAAlC,uBACd,cAAC,IAAD,CAAKD,KAAM,EAAX,SAAc,cAAC,IAAWL,MAAZ,CAAkBC,MAAO,EAAGK,QAAM,EAAlC,0BAElB,cAAC,IAAD,IA7CDrF,EAAOO,GAASjB,OAAOW,KAAI,SAAAiC,GAC9B,IDzBmBoD,EAAO5F,ECyBpB6F,EAAiB3E,EAASsB,EAAM3C,IACtC,GAAIgG,EAAgB,CAChB,IAAMC,GD3BSF,EC2BwBC,EAAe5B,QD3BhCjE,EC2ByCwC,EAAMxC,UD1BzE4F,EAAQG,KAAKC,IAAI,GAAIhG,IAAW4E,QAAQ,IC2B9BN,EAAQuB,EAAevB,MAC7B,OACI,eAAC,IAAD,CAAKmB,OAAQ,CAAC,GAAI,IAAoBP,MAAO,CAAEM,UAAW,QAA1D,UACI,cAAC,IAAD,CAAKE,KAAM,EAAX,SAAc,eAAC,IAAWL,MAAZ,CAAkBC,MAAO,EAAGK,QAAM,EAAlC,UAAoCnD,EAAMzC,MAA1C,SACd,cAAC,IAAD,CAAK2F,KAAM,EAAX,SAAc,cAAC,IAAWL,MAAZ,CAAkBC,MAAO,EAAGK,QAAM,EAAlC,SAAoCG,MAClD,cAAC,IAAD,CAAKJ,KAAM,EAAX,SAAc,eAAC,IAAWL,MAAZ,CAAkBC,MAAO,EAAGK,QAAM,EAAlC,UAAoCrB,EAAMA,MAAMM,QAAQ,GAAxD,SACd,cAAC,IAAD,CAAKc,KAAM,EAAX,SAAc,eAAC,IAAWL,MAAZ,CAAkBC,MAAO,EAAGK,QAAM,EAAlC,UAAoCjB,EAAcoB,EAAiBxB,EAAMA,OAAzE,SACd,cAAC,IAAD,CAAKoB,KAAM,EAAX,SAAc,eAAC,IAAWO,KAAZ,WAAkBnB,EAAWR,EAAM4B,mBAAoB5B,EAAM4B,kBAAkBtB,QAAQ,GAAvF,SACd,cAAC,IAAD,CAAKc,KAAM,EAAX,SAAc,eAAC,IAAWO,KAAZ,WAAkBnB,EAAWR,EAAM6B,oBAAqB7B,EAAM6B,mBAAmBvB,QAAQ,GAAzF,SACd,cAAC,IAAD,CAAKc,KAAM,EAAX,SAAc,eAAC,IAAWO,KAAZ,WAAkBnB,EAAWR,EAAM8B,mBAAoB9B,EAAM8B,kBAAkBxB,QAAQ,GAAvF,SACd,cAAC,IAAD,CAAKc,KAAM,EAAX,SAAc,eAAC,IAAWO,KAAZ,WAAkBnB,EAAWR,EAAM+B,oBAAqB/B,EAAM+B,mBAAmBzB,QAAQ,GAAzF,SACd,cAAC,IAAD,CAAKc,KAAM,EAAX,SAAc,eAAC,IAAWO,KAAZ,WAAkBnB,EAAWR,EAAMgC,oBAAqBhC,EAAMgC,mBAAmB1B,QAAQ,GAAzF,SACd,cAAC,IAAD,CAAKc,KAAM,EAAX,SAAc,eAAC,IAAWO,KAAZ,WAAkBnB,EAAWR,EAAMiC,oBAAqBjC,EAAMiC,mBAAmB3B,QAAQ,GAAzF,WAVUpC,EAAM3C,IActC,OAAO,cAAC,IAAD,GAAe2C,EAAM3C,cCV7B2G,EA7BF,WACT,MAA+C9F,cAAvCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAAQG,EAAzB,EAAyBA,SAAUF,EAAnC,EAAmCA,QAE7B4F,EAAO,uCAAG,sBAAAzE,EAAA,+EAEFjB,EAASd,GAFP,sDAIRyG,QAAQC,IAAR,MAJQ,wDAAH,qDAQb,OACI,gCACI,cAAC,IAAD,CAAQpB,UAAU,oBAAoBqB,QAASH,EAA/C,iCACA,cAAC,IAAWR,KAAZ,CAAiBf,MAAO,CAAED,MAAO,QAAS4B,WAAY,QAAtD,SAEQjG,EACI,uDAAiB,4BAAID,OACnB,uDAIVE,EAAU,eAAC,IAAWwE,MAAZ,CAAkBH,MAAO,CAAED,MAAO,SAAWK,MAAO,EAApD,uBAAkEzE,KAA8B,KAE9G,cAAC,EAAD,QCxBNiG,EAAa,SAACC,GAClB,OAAO,IAAI1E,IAAK0E,IAaHC,EAVH,WACV,OACE,cAAC,IAAD,CACIF,WAAYA,EADhB,SAGE,cAAC,EAAD,OCTNG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.290e718c.chunk.js","sourcesContent":["import React from 'react'\r\nimport Web3 from 'web3'\r\nimport moment from 'moment'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport chains from '../../constants/chains'\r\nimport { injected } from '../../components/wallet/connectors'\r\n\r\nlet interval\r\n\r\nconst useGetBalances = () => {\r\n    const { account, active, chainId, deactivate, activate } = useWeb3React()\r\n    const [balances, setBalances] = React.useState({})\r\n    const [lastUpdate, setLastUpdate] = React.useState(null)\r\n    const [updatedAt, setUpdatedAt] = React.useState(null)\r\n\r\n    React.useEffect(() => {\r\n        if(window.ethereum) {\r\n            window.ethereum.on('chainChanged', () => {\r\n                reactivate()\r\n            })\r\n            window.ethereum.on('accountsChanged', () => {\r\n                reactivate()\r\n\r\n            })\r\n        }\r\n        return () => clearInterval(interval)\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        clearInterval(interval)\r\n        interval = setInterval(() => {\r\n            if (lastUpdate) {\r\n                setUpdatedAt(lastUpdate.fromNow())\r\n            }\r\n        }, 10000)\r\n\r\n    }, [lastUpdate])\r\n\r\n    const reactivate = async() => {\r\n        await deactivate()\r\n        await activate(injected)\r\n        updateBalances()\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        updateBalances()\r\n    }, [active])\r\n\r\n    const updateBalances = async() => {\r\n        if (active) {\r\n            const chain = chains[chainId]\r\n            const rpcURL = chain.rpc\r\n            const web3 = new Web3(rpcURL)\r\n            const promises = []\r\n            chain.tokens.forEach((token) => {\r\n                let tokenAddress = token.id;\r\n                let walletAddress = account;\r\n\r\n                let minABI = [\r\n                    {\r\n                        \"constant\": true,\r\n                        \"inputs\": [{\"name\": \"_owner\", \"type\": \"address\"}],\r\n                        \"name\": \"balanceOf\",\r\n                        \"outputs\": [{\"name\": \"balance\", \"type\": \"uint256\"}],\r\n                        \"type\": \"function\"\r\n                    },\r\n                    {\r\n                        \"constant\": true,\r\n                        \"inputs\": [],\r\n                        \"name\": \"decimals\",\r\n                        \"outputs\": [{\"name\": \"\", \"type\": \"uint8\"}],\r\n                        \"type\": \"function\"\r\n                    }\r\n                ];\r\n                let contract = new web3.eth.Contract(minABI, tokenAddress);\r\n\r\n                const getBalance = async() => {\r\n                    return await contract.methods.balanceOf(walletAddress).call();\r\n                }\r\n                promises.push(getBalance())\r\n            })\r\n\r\n            const getPrices = async() => {\r\n                const apiKey = process.env.REACT_APP_COIN_MARKETCAP_API_KEY;\r\n                const params = {\r\n                    'method'  : 'GET',\r\n                    'headers' : {'X-CMC_PRO_API_KEY': apiKey},\r\n                    'muteHttpExceptions': true\r\n                };\r\n\r\n                const url = `https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?slug=${chain.tokens.reduce((acc, val, i) => acc + (i ? ',' : '') + val.slug, '')}`;\r\n                const res = await fetch(url, params);\r\n                return await res.json()\r\n            }\r\n\r\n            const res = await Promise.all(promises)\r\n            const prices = await getPrices()\r\n\r\n            setBalances(res.reduce((acc, balance, index) => {\r\n                const coinmarketcapID = Object.keys(prices.data).find(e => prices.data[e].slug === chain.tokens[index].slug)\r\n                const price = prices.data[coinmarketcapID]\r\n                return {\r\n                    ...acc,\r\n                    [chain.tokens[index].id]: {\r\n                        balance,\r\n                        price: price.quote.USD\r\n                    }\r\n                }\r\n            }, {}))\r\n            setLastUpdate(moment())\r\n        }\r\n    }\r\n\r\n    return { balances, updatedAt }\r\n}\r\n\r\nexport default useGetBalances\r\n","export default {\r\n    250: {//fantom\r\n        rpc: 'https://rpc.ftm.tools/',\r\n        tokens: [\r\n            {\r\n                id: '0x04068DA6C83AFCFA0e13ba15A6696662335D5B75',//usdc\r\n                slug: 'usd-coin',\r\n                title: 'usdc',\r\n                decimals: 6\r\n            },\r\n            {\r\n                id: '0x911da02c1232a3c3e1418b834a311921143b04d7',//vedao\r\n                slug: 'vedao',\r\n                title: 'veDAO',\r\n                decimals: 18\r\n            }\r\n        ],\r\n        title: 'Fantom'\r\n    },\r\n    43114: {//avalanche\r\n        rpc: 'https://api.avax.network/ext/bc/C/rpc',\r\n        tokens: [\r\n            {\r\n                id: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',//usdc\r\n                title: 'USDC',\r\n                slug: 'usd-coin',\r\n                decimals: 6\r\n            },\r\n            {\r\n                id: '0x6b8fb769d1957f2c29abc9d1beb95851cce775d8',//sfort\r\n                slug: 'fortressdao',\r\n                title: 'sFORT',\r\n                decimals: 9\r\n            },\r\n            {\r\n                id: '0xf6d46849db378ae01d93732585bec2c4480d1fd5',//fort\r\n                slug: 'fortressdao',\r\n                title: 'FORT',\r\n                decimals: 9\r\n            }\r\n        ],\r\n        title: 'Avalanche'\r\n    },\r\n    56: {//bsc\r\n        rpc: 'https://bsc-dataseed.binance.org/',\r\n        tokens: [\r\n            {\r\n                id: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',//usdc\r\n                title: 'USDC',\r\n                slug: 'usd-coin',\r\n                decimals: 18\r\n            },\r\n            {\r\n                id: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',//eth\r\n                slug: 'ethereum',\r\n                title: 'ETH',\r\n                decimals: 18\r\n            },\r\n            {\r\n                id: '0x41f831c60c7051cffa756ab5f9fee81a670ecde0',//blinu\r\n                slug: 'baby-lambo-inu',\r\n                title: 'BLINU',\r\n                decimals: 18\r\n            }\r\n        ],\r\n        title: 'Binance Smart Chain'\r\n    }\r\n}","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport chains from '../../constants/chains'\r\n\r\nexport const injected = new InjectedConnector({\r\n    supportedChainIds: Object.keys(chains).map(e => +e)\r\n})","export const formatDecimals = (value, decimals) => {\r\n    return (value / Math.pow(10, decimals)).toFixed(2)\r\n}\r\n\r\nexport const getTotalInUSD = (amount, price) => {\r\n    return (amount * price).toFixed(2)\r\n}","import { useWeb3React } from '@web3-react/core'\r\nimport { Typography, Row, Col, Skeleton, Card, Divider } from 'antd';\r\nimport { CaretUpOutlined, CaretDownOutlined } from '@ant-design/icons';\r\nimport chains from '../../constants/chains'\r\nimport useGetBalances from \"../../utils/hooks/getBalances\";\r\nimport { formatDecimals, getTotalInUSD } from \"../../utils/helpers/formatting\";\r\n\r\nconst Balances = () => {\r\n    const { active, chainId } = useWeb3React()\r\n    const { balances, updatedAt } = useGetBalances()\r\n\r\n    if (!active) {\r\n        return null\r\n    }\r\n\r\n    const renderIcon = (changePercentage) => {\r\n        if (changePercentage > 0) {\r\n            return <CaretUpOutlined color=\"red\" style={{ marginRight: '.5rem', color: '#77C66E' }} />\r\n        } else {\r\n            return <CaretDownOutlined style={{ marginRight: '.5rem', color: '#ea3c53' }} />\r\n        }\r\n    }\r\n\r\n    const renderList = () => {\r\n        return chains[chainId].tokens.map(token => {\r\n            const matchedBalance = balances[token.id]\r\n            if (matchedBalance) {\r\n                const formattedAmount = formatDecimals(matchedBalance.balance, token.decimals)\r\n                const price = matchedBalance.price\r\n                return (\r\n                    <Row gutter={[16, 16]} key={token.id} style={{ marginTop: '1rem' }}>\r\n                        <Col span={3}><Typography.Title level={4} strong>{token.title}:</Typography.Title></Col>\r\n                        <Col span={3}><Typography.Title level={4} strong>{formattedAmount}</Typography.Title></Col>\r\n                        <Col span={3}><Typography.Title level={4} strong>{price.price.toFixed(4)}$</Typography.Title></Col>\r\n                        <Col span={3}><Typography.Title level={4} strong>{getTotalInUSD(formattedAmount, price.price)}$</Typography.Title></Col>\r\n                        <Col span={2}><Typography.Text>{renderIcon(price.percent_change_1h)}{price.percent_change_1h.toFixed(2)}%</Typography.Text></Col>\r\n                        <Col span={2}><Typography.Text>{renderIcon(price.percent_change_24h)}{price.percent_change_24h.toFixed(2)}%</Typography.Text></Col>\r\n                        <Col span={2}><Typography.Text>{renderIcon(price.percent_change_7d)}{price.percent_change_7d.toFixed(2)}%</Typography.Text></Col>\r\n                        <Col span={2}><Typography.Text>{renderIcon(price.percent_change_30d)}{price.percent_change_30d.toFixed(2)}%</Typography.Text></Col>\r\n                        <Col span={2}><Typography.Text>{renderIcon(price.percent_change_60d)}{price.percent_change_60d.toFixed(2)}%</Typography.Text></Col>\r\n                        <Col span={2}><Typography.Text>{renderIcon(price.percent_change_90d)}{price.percent_change_90d.toFixed(2)}%</Typography.Text></Col>\r\n                    </Row>\r\n                )\r\n            } else {\r\n                return <Skeleton key={token.id} />\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                updatedAt ? (\r\n                    <Typography.Title style={{ color: 'white' }} level={5}>Last update: {updatedAt}</Typography.Title>\r\n                ) : null\r\n            }\r\n            <Card className=\"card-antd-restyled\" style={{ marginTop: '2rem' }}>\r\n                <Row gutter={[16, 16]}>\r\n                    <Col span={3}><Typography.Title level={4} strong>Title</Typography.Title></Col>\r\n                    <Col span={3}><Typography.Title level={4} strong>Balance</Typography.Title></Col>\r\n                    <Col span={3}><Typography.Title level={4} strong>Token price</Typography.Title></Col>\r\n                    <Col span={3}><Typography.Title level={4} strong>Total price</Typography.Title></Col>\r\n                    <Col span={2}><Typography.Title level={4} strong>1 hour</Typography.Title></Col>\r\n                    <Col span={2}><Typography.Title level={4} strong>24 hours</Typography.Title></Col>\r\n                    <Col span={2}><Typography.Title level={4} strong>7 days</Typography.Title></Col>\r\n                    <Col span={2}><Typography.Title level={4} strong>30 days</Typography.Title></Col>\r\n                    <Col span={2}><Typography.Title level={4} strong>60 days</Typography.Title></Col>\r\n                    <Col span={2}><Typography.Title level={4} strong>90 days</Typography.Title></Col>\r\n                </Row>\r\n                <Divider />\r\n                {renderList()}\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Balances\r\n","import { useWeb3React } from '@web3-react/core'\r\nimport {Button, Typography} from 'antd';\r\nimport { injected } from '../../components/wallet/connectors'\r\nimport Balances from '../../components/Balances'\r\n\r\nconst Home = () => {\r\n    const { account, active, activate, chainId } = useWeb3React()\r\n\r\n    const connect = async() => {\r\n        try {\r\n            await activate(injected)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button className=\"antd-btn-restyled\" onClick={connect}>Connect to MetaMask</Button>\r\n            <Typography.Text style={{ color: 'white', marginLeft: '1rem' }}>\r\n                {\r\n                    active ?\r\n                        <>Connected with <b>{account}</b></>\r\n                        : <>Not connected</>\r\n                }\r\n            </Typography.Text>\r\n            {\r\n                chainId ? <Typography.Title style={{ color: 'white' }} level={4}>Chain Id: {chainId}</Typography.Title> : null\r\n            }\r\n            <Balances />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import './App.css';\nimport { Web3ReactProvider } from '@web3-react/core'\nimport Web3 from 'web3'\nimport Home from './pages/Home'\n\nconst getLibrary = (provider) => {\n  return new Web3(provider)\n}\n\nconst App = () => {\n  return (\n    <Web3ReactProvider\n        getLibrary={getLibrary}\n    >\n      <Home />\n    </Web3ReactProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}