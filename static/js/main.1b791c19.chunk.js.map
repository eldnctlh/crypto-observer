{"version":3,"sources":["utils/hooks/getBalances.js","constants/chains.js","components/wallet/connectors.js","utils/helpers/formatting.js","components/Balances/index.js","utils/helpers/wallet.js","components/ChainsTabs/index.js","pages/Home/index.js","App.js","index.js"],"names":["interval","rpc","tokens","id","slug","title","boughtAtPrice","decimals","bdc","injected","InjectedConnector","supportedChainIds","Object","keys","chains","map","e","useGetBalances","useWeb3React","account","active","chainId","deactivate","activate","React","useState","balances","setBalances","lastUpdate","setLastUpdate","updatedAt","setUpdatedAt","isLoading","setIsLoading","useEffect","window","ethereum","on","reactivate","clearInterval","setInterval","fromNow","a","updateBalances","chain","rpcURL","web3","Web3","promises","forEach","token","tokenAddress","walletAddress","contract","eth","Contract","getBalance","methods","balanceOf","call","push","getPrices","process","params","url","reduce","acc","val","i","fetch","res","json","Promise","all","catch","err","console","log","prices","balance","index","coinmarketcapID","data","find","price","quote","USD","moment","getTotalInUSD","amount","toFixed","truncateRegex","truncateEthAddress","address","match","Balances","renderIcon","changePercentage","CaretUpOutlined","style","marginRight","color","CaretDownOutlined","className","marginTop","Title","level","onClick","disabled","ReloadOutlined","gutter","span","Text","strong","initial","current","value","matchedBalance","formattedAmount","Math","pow","priceNumber","abs","percent_change_24h","percent_change_7d","percent_change_30d","percent_change_60d","percent_change_90d","switchNetwork","key","request","method","toString","ChainsTabs","marginLeft","Home","connect","getLibrary","provider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b791c19.chunk.js","sourcesContent":["import React from 'react'\r\nimport Web3 from 'web3'\r\nimport moment from 'moment'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport chains from '../../constants/chains'\r\nimport { injected } from '../../components/wallet/connectors'\r\n\r\nlet interval\r\n\r\nconst useGetBalances = () => {\r\n    const { account, active, chainId, deactivate, activate } = useWeb3React()\r\n    const [balances, setBalances] = React.useState({})\r\n    const [lastUpdate, setLastUpdate] = React.useState(null)\r\n    const [updatedAt, setUpdatedAt] = React.useState(null)\r\n    const [isLoading, setIsLoading] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if(window.ethereum) {\r\n            window.ethereum.on('chainChanged', () => {\r\n                reactivate()\r\n            })\r\n            window.ethereum.on('accountsChanged', () => {\r\n                reactivate()\r\n\r\n            })\r\n        }\r\n        return () => clearInterval(interval)\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        clearInterval(interval)\r\n        interval = setInterval(() => {\r\n            if (lastUpdate) {\r\n                setUpdatedAt(lastUpdate.fromNow())\r\n            }\r\n        }, 10000)\r\n\r\n    }, [lastUpdate])\r\n\r\n    const reactivate = async() => {\r\n        await deactivate()\r\n        await activate(injected)\r\n        updateBalances()\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        updateBalances()\r\n    }, [active])\r\n\r\n    const updateBalances = async() => {\r\n        if (active) {\r\n            setIsLoading(true)\r\n            const chain = chains[chainId]\r\n            const rpcURL = chain.rpc\r\n            const web3 = new Web3(rpcURL)\r\n            const promises = []\r\n            chain.tokens.forEach((token) => {\r\n                let tokenAddress = token.id;\r\n                let walletAddress = account;\r\n\r\n                let minABI = [\r\n                    {\r\n                        \"constant\": true,\r\n                        \"inputs\": [{\"name\": \"_owner\", \"type\": \"address\"}],\r\n                        \"name\": \"balanceOf\",\r\n                        \"outputs\": [{\"name\": \"balance\", \"type\": \"uint256\"}],\r\n                        \"type\": \"function\"\r\n                    },\r\n                    {\r\n                        \"constant\": true,\r\n                        \"inputs\": [],\r\n                        \"name\": \"decimals\",\r\n                        \"outputs\": [{\"name\": \"\", \"type\": \"uint8\"}],\r\n                        \"type\": \"function\"\r\n                    }\r\n                ];\r\n                let contract = new web3.eth.Contract(minABI, tokenAddress);\r\n                const getBalance = async() => {\r\n                    return await contract.methods.balanceOf(walletAddress).call();\r\n                }\r\n                promises.push(getBalance())\r\n            })\r\n\r\n            const getPrices = async() => {\r\n                const apiKey = process.env.REACT_APP_COIN_MARKETCAP_API_KEY;\r\n                const params = {\r\n                    'method'  : 'GET',\r\n                    'headers' : {'X-CMC_PRO_API_KEY': apiKey},\r\n                    'muteHttpExceptions': true\r\n                };\r\n\r\n                const url = `https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?slug=${chain.tokens.reduce((acc, val, i) => acc + (i ? ',' : '') + val.slug, '')}`;\r\n                const res = await fetch(url, params);\r\n                return await res.json()\r\n            }\r\n            const res = await Promise.all(promises).catch(err => console.log(err))\r\n            try {\r\n                const prices = await getPrices()\r\n                \r\n                setBalances(res.reduce((acc, balance, index) => {\r\n                    const coinmarketcapID = Object.keys(prices.data).find(e => prices.data[e].slug === chain.tokens[index].slug)\r\n                    const price = prices.data[coinmarketcapID]\r\n                    return {\r\n                        ...acc,\r\n                        [chain.tokens[index].id]: {\r\n                            balance,\r\n                            price: price.quote.USD\r\n                        }\r\n                    }\r\n                }, {}))\r\n                setLastUpdate(moment())\r\n                setUpdatedAt(moment().fromNow())\r\n            } catch(err) {\r\n                console.log(err)\r\n            }\r\n\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return { balances, updatedAt, updateBalances, isLoading }\r\n}\r\n\r\nexport default useGetBalances\r\n","export default {\r\n    1: {//ethereum\r\n        rpc: 'https://rpc.ankr.com/eth',\r\n        tokens: [\r\n            {\r\n                id: '0xD533a949740bb3306d119CC777fa900bA034cd52',//usdc\r\n                slug: 'curve-dao-token',\r\n                title: 'Curve',\r\n                boughtAtPrice: 1.13,\r\n                decimals: 18\r\n            },\r\n        ],\r\n        title: 'Ethereum'\r\n    },\r\n    10: {//optimism\r\n        rpc: 'https://mainnet.optimism.io',\r\n        tokens: [\r\n            {\r\n                id: '0x3c8B650257cFb5f272f799F5e2b4e65093a11a05',//usdc\r\n                slug: 'velodrome-finance',\r\n                title: 'Velo',\r\n                boughtAtPrice: 0.18,\r\n                decimals: 18\r\n            },\r\n        ],\r\n        title: 'Optimism'\r\n    },\r\n    250: {//fantom\r\n        rpc: 'https://rpc.ftm.tools/',\r\n        tokens: [\r\n            {\r\n                id: '0x841fad6eae12c286d1fd18d1d525dffa75c7effe',//boo\r\n                slug: 'spookyswap',\r\n                title: 'BOO',\r\n                boughtAtPrice: 1.58,\r\n                decimals: 18\r\n            }\r\n        ],\r\n        title: 'Fantom'\r\n    },\r\n    56: {//bsc\r\n        rpc: 'https://bsc-dataseed.binance.org/',\r\n        tokens: [\r\n            {\r\n                id: '0xc748673057861a797275cd8a068abb95a902e8de',//bdc\r\n                slug: 'baby-doge-coin',\r\n                title: 'Baby Doge Coin',\r\n                boughtAtPrice: 0.002506,\r\n                decimals: 12,\r\n                bdc: true\r\n            },\r\n            {\r\n                id: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',//pancake\r\n                slug: 'pancakeswap',\r\n                title: 'Pancake',\r\n                boughtAtPrice: 3.78,\r\n                decimals: 18\r\n            }\r\n        ],\r\n        title: 'Binance Smart Chain'\r\n    }\r\n}","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport chains from '../../constants/chains'\r\n\r\nexport const injected = new InjectedConnector({\r\n    supportedChainIds: Object.keys(chains).map(e => +e)\r\n})","export const formatDecimals = (value, decimals) => {\r\n    return (value / Math.pow(10, decimals)).toFixed(2)\r\n}\r\n\r\nexport const getTotalInUSD = (amount, price) => {\r\n    return (amount * price).toFixed(2)\r\n}\r\n\r\nconst truncateRegex = /^(0x[a-zA-Z0-9]{4})[a-zA-Z0-9]+([a-zA-Z0-9]{4})$/;\r\n\r\nexport const truncateEthAddress = (address) => {\r\n    const match = address.match(truncateRegex);\r\n    if (!match) return address;\r\n    return `${match[1]}…${match[2]}`;\r\n};\r\n","import { useWeb3React } from '@web3-react/core'\r\nimport { Typography, Row, Col, Skeleton, Card, Divider, Button } from 'antd';\r\nimport { CaretUpOutlined, CaretDownOutlined, ReloadOutlined } from '@ant-design/icons';\r\nimport chains from '../../constants/chains'\r\nimport useGetBalances from \"../../utils/hooks/getBalances\";\r\nimport { formatDecimals, getTotalInUSD } from \"../../utils/helpers/formatting\";\r\n\r\nconst Balances = () => {\r\n    const { active, chainId } = useWeb3React()\r\n    const { balances, updatedAt, updateBalances, isLoading } = useGetBalances()\r\n\r\n    if (!active) {\r\n        return null\r\n    }\r\n\r\n    const renderIcon = (changePercentage) => {\r\n        if (changePercentage > 0) {\r\n            return <CaretUpOutlined style={{ marginRight: '.2rem', color: '#77C66E' }} />\r\n        } else {\r\n            return <CaretDownOutlined style={{ marginRight: '.2rem', color: '#ea3c53' }} />\r\n        }\r\n    }\r\n\r\n    const getProfit = (initial, current) => `${(100 * Math.abs( (initial - current) / ( (initial+current)/2 ) )).toFixed(2)}%`\r\n\r\n    const renderList = () => {\r\n        return chains[chainId].tokens.map(token => {\r\n            const matchedBalance = balances[token.id]\r\n\r\n            if (matchedBalance) {\r\n                const formattedAmount = formatDecimals(matchedBalance.balance, token.decimals)\r\n                const price = matchedBalance.price\r\n                const priceNumber = token.bdc ? matchedBalance.price.price * 1000000 : matchedBalance.price.price\r\n                return (\r\n                    <Row gutter={[16, 16]} key={token.id} style={{ marginTop: '1rem' }}>\r\n                        <Col span={2}><Typography.Text strong>{token.title}:</Typography.Text></Col>\r\n                        <Col span={2}><Typography.Text strong>{formattedAmount}</Typography.Text></Col>\r\n                        <Col span={2}><Typography.Text strong>{token.boughtAtPrice ? `${token.boughtAtPrice}$` : ''}</Typography.Text></Col>\r\n                        <Col span={2}><Typography.Text strong>{priceNumber.toFixed(4)}$</Typography.Text></Col>\r\n                        <Col span={2}><Typography.Text strong>{token.boughtAtPrice ? getProfit(token.boughtAtPrice, priceNumber) : null}</Typography.Text></Col>\r\n                        <Col span={2}><Typography.Text strong>{getTotalInUSD(formattedAmount, priceNumber)}$</Typography.Text></Col>\r\n                        <Col span={2}><Typography.Text>{renderIcon(price.percent_change_24h)}{price.percent_change_24h.toFixed(2)}%</Typography.Text></Col>\r\n                        <Col span={2}><Typography.Text>{renderIcon(price.percent_change_7d)}{price.percent_change_7d.toFixed(2)}%</Typography.Text></Col>\r\n                        <Col span={2}><Typography.Text>{renderIcon(price.percent_change_30d)}{price.percent_change_30d.toFixed(2)}%</Typography.Text></Col>\r\n                        <Col span={2}><Typography.Text>{renderIcon(price.percent_change_60d)}{price.percent_change_60d.toFixed(2)}%</Typography.Text></Col>\r\n                        <Col span={2}><Typography.Text>{renderIcon(price.percent_change_90d)}{price.percent_change_90d.toFixed(2)}%</Typography.Text></Col>\r\n                    </Row>\r\n                )\r\n            } else {\r\n                return <Skeleton title={false} key={token.id} />\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                updatedAt ? (\r\n                    <div className=\"flex-aligned\" style={{ marginTop: '2rem' }}>\r\n                        <Typography.Title style={{ color: 'white', marginRight: '1rem' }} level={5}>Last update: {updatedAt}</Typography.Title>\r\n                        <Button\r\n                            className=\"antd-btn-restyled\"\r\n                            onClick={updateBalances}\r\n                            disabled={isLoading}\r\n                        >\r\n                            <ReloadOutlined style={{ color: '#fff' }} />\r\n                            Update\r\n                        </Button>\r\n                    </div>\r\n                ) : null\r\n            }\r\n            <Card className=\"card-antd-restyled\" style={{ marginTop: '2rem' }}>\r\n                <Row gutter={[16, 16]}>\r\n                    <Col span={2}><Typography.Text strong>Title</Typography.Text></Col>\r\n                    <Col span={2}><Typography.Text strong>Balance</Typography.Text></Col>\r\n                    <Col span={2}><Typography.Text strong>Bought at</Typography.Text></Col>\r\n                    <Col span={2}><Typography.Text strong>Token price</Typography.Text></Col>\r\n                    <Col span={2}><Typography.Text strong>Profit %</Typography.Text></Col>\r\n                    <Col span={2}><Typography.Text strong>Total price</Typography.Text></Col>\r\n                    <Col span={2}><Typography.Text strong>24 h</Typography.Text></Col>\r\n                    <Col span={2}><Typography.Text strong>7 d</Typography.Text></Col>\r\n                    <Col span={2}><Typography.Text strong>30 d</Typography.Text></Col>\r\n                    <Col span={2}><Typography.Text strong>60 d</Typography.Text></Col>\r\n                    <Col span={2}><Typography.Text strong>90 d</Typography.Text></Col>\r\n                </Row>\r\n                <Divider />\r\n                {renderList()}\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Balances\r\n","export const switchNetwork = async (key) => {\r\n    if (window.ethereum) {\r\n        try {\r\n            await window.ethereum.request({\r\n                method: \"wallet_switchEthereumChain\",\r\n                params: [{ chainId: `0x${(+key).toString(16)}` }],\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};","import { Button } from 'antd';\r\nimport chains from '../../constants/chains'\r\nimport { switchNetwork } from '../../utils/helpers/wallet'\r\nimport {useWeb3React} from \"@web3-react/core\";\r\n\r\nconst ChainsTabs = () => {\r\n    const { chainId } = useWeb3React()\r\n    return (\r\n        <div>\r\n            {\r\n                Object.keys(chains).map(key => (\r\n                    <Button\r\n                        className=\"antd-btn-restyled\"\r\n                        key={key}\r\n                        onClick={() => switchNetwork(key)}\r\n                        style={{ marginLeft: '1rem' }}\r\n                        disabled={chainId === +key}\r\n                    >\r\n                        Change to {chains[key].title}\r\n                    </Button>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChainsTabs;\r\n","import { useWeb3React } from '@web3-react/core'\r\nimport { Button, Typography, Row, Col } from 'antd';\r\nimport { injected } from '../../components/wallet/connectors'\r\nimport Balances from '../../components/Balances'\r\nimport ChainsTabs from '../../components/ChainsTabs'\r\nimport { truncateEthAddress } from '../../utils/helpers/formatting'\r\n\r\nconst Home = () => {\r\n    const { account, active, activate, chainId, deactivate } = useWeb3React()\r\n\r\n    const connect = async() => {\r\n        if (active) {\r\n            deactivate()\r\n        } else {\r\n            try {\r\n                await activate(injected)\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Row gutter={[16, 16]}>\r\n                <Col span={8}>\r\n                    <Button className=\"antd-btn-restyled\" onClick={connect}>\r\n                        {\r\n                            active ? 'Deactivate' : 'Connect to MetaMask'\r\n                        }\r\n                    </Button>\r\n                    <Typography.Text style={{ color: 'white', marginLeft: '1rem' }}>\r\n                        {\r\n                            active ?\r\n                                <>Connected with <b>{truncateEthAddress(account)}</b></>\r\n                                : <>Not connected</>\r\n                        }\r\n                    </Typography.Text>\r\n                </Col>\r\n                {\r\n                    chainId ? (\r\n                        <Col span={16}>\r\n                            <ChainsTabs />\r\n                        </Col>\r\n                    ) : null\r\n                }\r\n            </Row>\r\n            <Balances />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import './App.css';\nimport { Web3ReactProvider } from '@web3-react/core'\nimport Web3 from 'web3'\nimport Home from './pages/Home'\n\nconst getLibrary = (provider) => {\n  return new Web3(provider)\n}\n\nconst App = () => {\n  return (\n    <Web3ReactProvider\n        getLibrary={getLibrary}\n    >\n      <Home />\n    </Web3ReactProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}